import pandas as pd
import numpy as np
bank = pd.read_excel('Bank Marketing.xlsx')
bank.head()
bank.info()
#Check for missing values
bank.isnull().sum()
#Since there is no missing value in the data, we can look at the descriptive statistics
bank.describe()
bank.shape
cat_col = ['Job','Marital Status']
bank_dummy = pd.get_dummies(bank,columns=cat_col,drop_first=True)
bank_dummy.shape
bank_dummy
#Identifying target variable
Y = bank_dummy[['Subscription']]
X = bank_dummy.drop(columns=['Subscription'])
X
Y
#Splitting into train and test
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=0.25,random_state=42)
len(x_train),len(x_test),len(y_train),len(y_test)
x_train
x_test
y_train
y_test
#Building the model
from sklearn.naive_bayes import GaussianNB
naive = GaussianNB()
naive_model = naive.fit(x_train,y_train)
naive_model
print('The model has ran successfully!')
#Predicting on test data
y_test
y_test['Predicted'] = naive_model.predict(x_test)
y_test
#Evaluating the model
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
print(confusion_matrix(y_test['Subscription'],y_test['Predicted']))
accuracy = accuracy_score(y_test['Subscription'],y_test['Predicted'])
accuracy = np.round(accuracy,2)
print('The accuracy of the model is: ',accuracy)
print(classification_report(y_test['Subscription'],y_test['Predicted']))
#Predicting on new data
d1=X.iloc[15]
d1
val_data = pd.DataFrame(d1)
val_data.transpose()
val_data1 = naive_model.predict(val_data.transpose())
val_data1
